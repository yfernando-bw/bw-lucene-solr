From 1572aa35251bc556b32301b371afc95874dcda35 Mon Sep 17 00:00:00 2001
From: Richard Goodman <richardg@brandwatch.com>
Date: Tue, 19 May 2020 10:24:38 +0100
Subject: [PATCH 32/83] Made function to push images

Cleaned up the code a bit to have a function to push images instead
---
 Jenkinsfile | 69 ++++++++++++++++++++++++++++-------------------------
 1 file changed, 36 insertions(+), 33 deletions(-)

diff --git a/Jenkinsfile b/Jenkinsfile
index c66bfe38fe..b5abe520be 100644
--- a/Jenkinsfile
+++ b/Jenkinsfile
@@ -1,6 +1,34 @@
 #!groovy
-def gcpProject =  "bw-prod-platform0"
-def baseImageExist = false
+gcpProject =  "bw-prod-platform0"
+baseImageExist = false
+
+def doesBaseImageExist(String imageVersion) {
+    /*
+        Originally, the docker file would create a new debian image and install
+        all the dependencies needed to build solr, to save time, I've separated
+        the two "stages" into separate docker files, with this, I then do a check
+        to see if the ant-base image exists in our gcr, if it does, then it'll skip
+        building it which should cut down on processing time
+    */
+    echo "Test: ${gcpProject} ... ${imageVersion}"
+    try {
+        img = docker.image("${gcpProject}/ant-base:${imageVersion}").withRun { c ->
+            sh 'ant --help'
+        }
+        return true
+    } catch (Exception e) {
+        return false
+    }
+}
+
+def pushImage(String imageID, String imageVersion) {
+    withEnv(["DOCKER_BUILDKIT=1"]) {
+        img = docker.image(imageID)
+        docker.withRegistry("https://eu.gcr.io", "gcr:${gcpProject}") {
+            img.push(imageVersion)
+        }
+    }
+}
 
 node('docker') {
     stage ('Checkout') {
@@ -18,8 +46,8 @@ node('docker') {
     }
 
     stage ('Build images') {
-        // TODO - make function for pushing images
         baseImageExist = doesBaseImageExist(major_version)
+        /*
         if ( baseImageExist ) {
             echo "Base image exists, using that"
             withEnv(["DOCKER_BUILDKIT=1"]) {
@@ -29,48 +57,23 @@ node('docker') {
                     --build-arg MAJOR_VERSION=${major_version} \
                     -t ${gcpProject}/bw-lucene-solr:${version} .
                 """
-                img = docker.image("${gcpProject}/bw-lucene-solr:${version}")
-                docker.withRegistry("https://eu.gcr.io", "gcr:${gcpProject}") {
-                    img.push(version)
-                }
+                pushImage("${gcpProject}/bw-lucene-solr:${version}", version)
             }
         } else {
             echo "Unable to find base image, building"
             withEnv(["DOCKER_BUILDKIT=1"]) {
                 sh "docker build -f base.Dockerfile -t ${gcpProject}/ant-base:${major_version} ."
-                img = docker.image("${gcpProject}/ant-base:${major_version}")
-                docker.withRegistry("https://eu.gcr.io", "gcr:${gcpProject}") {
-                    img.push(major_version)
-                }
+                pushImage("${gcpProject}/ant-base:${major_version}", major_version)
+
                 sh """ docker build \
                     -f Dockerfile \
                     --build-arg REPO=${gcpProject} \
                     --build-arg MAJOR_VERSION=${major_version} \
                     -t ${gcpProject}/bw-lucene-solr:${version} .
                 """
-                img = docker.image("${gcpProject}/bw-lucene-solr:${version}")
-                docker.withRegistry("https://eu.gcr.io", "gcr:${gcpProject}") {
-                    img.push(version)
-                }
+                pushImage("${gcpProject}/bw-lucene-solr:${version}", version)
             }
         }
-    }
-}
-
-def doesBaseImageExist(String imageVersion) {
-    /*
-        Originally, the docker file would create a new debian image and install
-        all the dependencies needed to build solr, to save time, I've separated
-        the two "stages" into separate docker files, with this, I then do a check
-        to see if the ant-base image exists in our gcr, if it does, then it'll skip
-        building it which should cut down on processing time
-    */
-    try {
-        img = docker.image("${gcpProject}/ant-base:${imageVersion}").withRun { c ->
-            sh 'ant --help'
-        }
-        return true
-    } catch (Exception e) {
-        return false
+        */
     }
 }
-- 
2.32.1 (Apple Git-133)

